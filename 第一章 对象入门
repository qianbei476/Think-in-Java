1.OOP
    
    所有的编程语言的最终目的都是提供一种“抽象”方法。
    
    可替换性是OOP最重要的概念之一。
    
    面向对象程序设计方法特征：
    （1）所有东西都是对象
    （2）程序是一大堆对象的组合，通过消息传递，各对象知道自己该做什么
    （3）每个对象都有自己的存储空间，可容纳其他对象
    （4）每个对象都有一种类型（如circle类属于shape类，程序代码统一指挥shape，其自动控制所有符合shape描述的对象，包括circle----可替换性）
    （5）同一类所有对象都能接收相同的消息
    
    “接口”（interface）规定了可对一个特定的对象发出哪些请求。
    
    public、inherit、friendly（package）、protected。
    
    “创建一个对象”--将类的一个对象置入一个新类。
    
    “组织”--在现有类的基础上组织一个新类，新类可由任意数量和类型的其他对象构成，也将组织称作“包含”关系，比如“一辆车组织/包含了一个变速箱”。
    
    通常，继承最终会以创建一系列类收场，所有类都建立在统一的接口基础上，对于这一系列的类，我们需要的一项重要处理是将衍生类的对象当作基础类的一个对象对待。以意味着我们只需要编写单一的代码，令其忽略类型的特定细节，只与基础类打交道，赋予了程序“扩展能力”，具有“扩展性。”
